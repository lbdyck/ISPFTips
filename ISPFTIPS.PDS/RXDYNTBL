  /* ------------------------- REXX ----------------------------- *
  | Sample REXX Exec to demonstrate how to dynamically add       |
  | rows to a table while processing. This is primarily intended |
  | for use with large amounts of data so that the user can get  |
  | started using the table quickly, with a subset of the table  |
  | rows. Then as the user scrolls the additional table rows     |
  | are added.                                                   |
  |                                                              |
  | A popup panel will ask for the total number of records and   |
  | the incremental number to add.                               |
  |                                                              |
  | A popup is used to inform the user the rows are about to     |
  | be added - requiring the user to press enter to continue     |
  | (otherwise the popup would disappear too fast).              |
  |                                                              |
  | Dependencies:                                                |
  | ISPF Panels:  PNDYNTBL                                       |
  |               PNPOPV                                         |
  |               PNDYNTP                                        |
  * ------------------------------------------------------------ *
  |  ISPF - Developers - Tips and Tricks                         |
  * ------------------------------------------------------------ */

  /* ----------------------------------- *
  | Define initial values for the table |
  * ----------------------------------- */
  total   = 10000
  incrnum = 100

  /* ------------------------------------------------- *
  | Prompt the user to change the values if they want |
  * ------------------------------------------------- */
  Address ISPExec
  'addpop row(4) column(4)'
  'display panel(PNDYNTP)'
  'rempop'

  /* set our defaults */
  parse value '' with null bottom

  /* 1st build a stem with a bunch of records */
  str = 'one two three four five six seven eight nine ten'
  do i = 1 to total
    off = i//10
    if off = 0 then off = 10
    stem.i = word(str,off) date(w) time('l')
  end
  stem.0 = total

  /* now create the table and prime it with n records */
  tbl = 'DT'time('s')   /* random table name */
  Address ISPExec
  'tbcreate' tbl 'names(data date time) nowrite'
  ztdamtl = incrnum /* set initial # of rows to add */
  last = 1            /* initialize the last record added */
  ztdret = 'DOWN'     /* instruct tbdispl to return to us on DOWN */

  c = 0                         /* set row added counter    */
  call start_time               /* Get start time for routine */
  x = add_rows()                /* call routine to add rows */
  call end_time                 /* get end time for routine */

  /* ---------------------------------------------------- *
  | Display the table of records                         |
  | - if the scoll is past the bottom then add more rows |
  * ---------------------------------------------------- */
  dtop = 1                      /* set top of table variable */

  do forever
    'tbtop' tbl                      /* Get to the top of the table */
    'tbskip' tbl 'number('dtop')'    /* Scroll down to where the user
    scrolled last */
    'tbdispl' tbl 'panel(pndyntbl)'  /* display the table */
    if rc > 0 then leave             /* Leave if F3/End requested */
    dtop = ztdtop                   /* save the top displayed row */
    'vget (zscrolla)'               /* get scroll amount          */
    /* query the table for information */
    'tbquery' tbl 'rownum(totrows) position(pos)'

    /* -------------------------------------------------------- *
    | if ztdadd is YES (indicating TBDISPL wants more rows to  |
    | to added then test if all records have been added.       |
    * -------------------------------------------------------- */
    if ztdadd = 'YES' then      /* Add more rows ? */
    if totrows = stem.0         /* if Yes have all records been added */
    then ztdadd = 'NO'          /* If all added change ztdadd to NO */
    if zscrolla = 'CSR' then    /* Test scroll amount for CSR */
    if pos = 0 then do          /* If CSR then is cursor at 0 */
      dtop = dtop + ztdvrows    /* If at 0 then down down 1 screen of data */
      if dtop >= totrows then   /* If top >= total rows */
      dtop = totrows - ztdvrows +1  /* then reset the top row */
    end
    if ztdadd = 'YES' then do forever   /* Request to add more rows */
      c = 0                             /* Set added counter */
      if zscrolla = 'MAX' then ztdamtl = stem.0  /* test for max */
      call start_time
      x = add_rows()                   /* call add_rows subroutine */
      call end_time
      if c > 0 then do          /* records added */
        if ZTDSCRP > 0 then     /* update top row to display */
        dtop = ZTDSCRP
        else do
          /* ------------------------------------ *
          | Test to setup the top row to display |
          * ------------------------------------ */
          'tbquery' tbl 'rownum(totrows) position(pos)'
          if datatype(zscrolla) /= 'NUM'
          then if zscrolla /= 'MAX'
          then zscrolla = 0
          if zscrolla = 'MAX'
          then dtop = totrows - ztdvrows +1  /* adjust to see the bottom row */
          else dtop = dtop + zscrolla
        end
        leave
      end
      if x > 0 then bottom = 1  /* set the bottom flag if all records
      are added */
      if bottom = 1 then leave  /* if at bottom then leave add loop */
    end
  end

  /* ------------------------------------ *
  | Done so need to close the ISPF table |
  | and then Exit                        |
  * ------------------------------------ */
Done:
  'tbend' tbl
  Exit

  /* ------------------------------------------------------ *
  | Add more rows to the table                             |
  | - test amount to add and if < 100 make it 100          |
  | - skip to the bottom of the table to start adding rows |
  | - begin adding the the last row added                  |
  * ------------------------------------------------------ */
Add_Rows:
  if bottom = 1 then return 8   /* If already at the bottom then return
  quickly */
  msg1 = 'Adding more records.'
  msg2 = 'Starting with record' last
  call pop                      /* Inform the user of the adds in
  progress */
  if ztdamtl < incrnum          /* add at least n each time */
  then ztdamtl = incrnum
  'tbbottom' tbl                /* Get to the bottom of the table to
  start */
  do i = last to last+ztdamtl
    if i > stem.0 then do
      last = i
      return 8
    end
    parse value stem.i with data date time
    'tbadd' tbl
    c = c + 1
  end
  last = i
  return 0

  /* ----------------------- *
  | Popup information panel |
  * ----------------------- */
pop:
  'addpop row(4) column(3)'
  'display panel(pnpopv)'
  'rempop'
  return

  /* ------------------------------------ *
  | Save starting service units and time |
  * ------------------------------------ */
Start_time:
  s_service = sysvar('SYSSRV')
  s_time    = sysvar('SYSCPU')
  return

  /* -------------------------------------------- *
  | Get the end service units count and end time |
  | Calculate the delta                          |
  | Report out                                   |
  * -------------------------------------------- */
End_time:
  e_service = sysvar('SYSSRV')
  e_time    = sysvar('SYSCPU')

  total_service = e_service - s_service
  total_time    = e_time    - s_time

  zedsmsg = 'Time:' total_time 'seconds'
  zedlmsg = 'Total Service:' total_service 'Total Time:' total_time 'seconds.'
  'setmsg msg(isrz001)'
  return
